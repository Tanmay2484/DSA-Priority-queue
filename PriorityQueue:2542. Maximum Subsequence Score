/* 2542. Maximum Subsequence Score
 Link:https://leetcode.com/problems/maximum-subsequence-score/description/
*/

class Solution {
public:
    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {
        vector<pair<int, int>>v;
        for(int i=0; i<nums1.size(); i++){
            v.push_back({nums2[i], nums1[i]});
        }
        sort(v.begin(), v.end());
        reverse(v.begin(), v.end());
        priority_queue<int>q;
        long long int sum=0;
        for(int i=0; i<k-1; i++){
            sum+=v[i].second;
            q.push(-v[i].second);
        }
        long long int ans=INT_MIN;
        for(int i=k-1; i<nums1.size(); i++){
            ans=max(ans, v[i].first*(sum+v[i].second));
            q.push(-v[i].second);
            sum+=v[i].second;
            if(q.size()==k){
                sum+=q.top();
                q.pop();
            }
        }
        return ans;
    }
};
